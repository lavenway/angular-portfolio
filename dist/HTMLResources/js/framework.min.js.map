{"version":3,"sources":["animations.js","base.js","folio-app.js","controllers/folio.js","factories/dataservice.js"],"names":[],"mappingsllXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"framework.min.js","sourcesContent":["function animations() {\n\n  //Default configurations\n  var defaultTitle = {\n    distance : '200%',\n    easing   : 'ease-in-out',\n    mobile   : false,\n    reset    : true,\n    opacity  : 1,\n    origin   : 'left',\n    scale    : 1\n  };\n\n  //Section configurations\n  var homeLogo = {\n    easing   : 'ease-in-out',\n    mobile   : false,\n    opacity  : 0,\n    scale    : 0.8,\n    reset    : true,\n    viewOffset: { top: 300 }\n  };\n\n  var homeText = {\n    easing   : 'ease-in-out',\n    mobile   : false,\n    opacity  : 0,\n    reset    : true,\n    scale    : 1,\n    viewOffset: { top: 300 }\n  };\n\n  var workItems = {\n    distance : '-40px',\n    easing   : 'ease-in-out',\n    mobile   : false,\n    reset    : true,\n    origin   : 'bottom'\n  };\n\n  var aboutText = {\n    distance : '-200%',\n    easing   : 'ease-in-out',\n    mobile   : false,\n    reset    : true,\n    origin   : 'left'\n  };\n\n  var aboutLogo = {\n    easing   : 'ease-in-out',\n    mobile   : false,\n    opacity  : 0,\n    reset    : true,\n  };\n\n  var testimonialItems = {\n    distance : '-200%',\n    easing   : 'ease-in-out',\n    mobile   : false,\n    reset    : true,\n    opacity  : 1,\n    origin   : 'right',\n    scale    : 1\n  };\n\n  var contactForm = {\n    distance : '-100%',\n    easing   : 'ease-in-out',\n    mobile   : false,\n    reset    : true,\n    opacity  : 1,\n    origin   : 'top',\n    scale    : 1\n  };\n\n  //Initialise the plugin\n  window.sr = ScrollReveal();\n\n  //Default\n  sr.reveal('.section h2', defaultTitle);\n\n  //Section One\n  sr.reveal('.section.home .wl-logo', homeLogo);\n  sr.reveal('.section.home .text', homeText);\n\n  //Section Two\n  sr.reveal('.section.work .active .logo', workItems);\n\n  //Section Three\n  sr.reveal('.section.about .active .logo', aboutLogo);\n  sr.reveal('.section.about .active .details', aboutText);\n\n  //Section Four\n  sr.reveal('.section.testimonial .items', testimonialItems);\n\n  //Section Five\n  sr.reveal('.section.contact .contact-form', contactForm);\n\n}","// IIFE - Immediately Invoked Function Expression\n(function(portfolio) {\n  'use strict';\n\n  //console.log('portfolio');\n  // The global jQuery object is passed as a parameter\n  portfolio(window.jQuery, window, document);\n\n  }(function($, window, document) {\n      'use strict';\n\n      //console.log('window, document');\n      // The $ is now locally scoped \n      $(function() {\n          // The DOM is ready!\n          //console.log('inner function from window, document');\n          // This is needed to prevent onreadystatechange being run twice\n          var ready = false;\n\n          document.onreadystatechange = function() {\n            //console.log('onreadystatechange');\n            if (ready) {\n              return;\n            }\n            \n            // interactive = DOMContentLoaded & complete = window.load\n            if (document.readyState == 'interactive' || document.readyState == 'complete') {\n              ready = true;\n\n              // LOAD THE PAGE ANIMATIONS\n              setTimeout( function() {\n                animations();\n              }, 700);\n            }\n          };\n      });\n\n      // The rest of your code goes here!\n      // Variables\n      var body = $('body'),\n          desktopDevice = 'desktop-viewport',\n          mobileDevice = 'mobile-viewport',\n          $mobileHiddenNav = $('.navbar-links'),\n          $mobileMenuToggle = $('.mobile-menu'),\n          $mobileMenulinkClose = $('.navbar a'),\n          $portfolioAnchor = $('.portfolio-link'),\n          tabletDevice = 'tablet-viewport',\n\n          handleMobileNavToggle = function () {\n            body.toggleClass('navbar-active');\n\n            $mobileHiddenNav.toggle();\n          },\n\n          handleMobileNavClose = function () {\n\n            if(body.hasClass(mobileDevice)) {\n              body.removeClass('navbar-active');\n\n              $mobileHiddenNav.hide();\n            }\n            \n          },\n\n          handleScrollDetection = function () {\n\n            body.addClass('scroll-active');\n\n            clearTimeout($.data(this, 'scrollTimer'));\n\n            $.data(this, 'scrollTimer', setTimeout(function() {\n                body.removeClass('scroll-active');\n            }, 500));\n\n          },\n\n          handlePortfolioAnchor = function () {\n\n            $('html,body').animate({\n              scrollTop: $('.section.work').offset().top\n            });\n\n          };\n\n      enquire.register('screen and (max-width:480px)', {\n        // OPTIONAL\n        // If supplied, triggered when a media query matches.\n        match : function() {\n          body.addClass(mobileDevice);\n        },      \n                                    \n        // OPTIONAL\n        // If supplied, triggered when the media query transitions \n        // *from a matched state to an unmatched state*.\n        unmatch : function() {\n          body.removeClass(mobileDevice);\n        },    \n        \n        // OPTIONAL\n        // If supplied, triggered once, when the handler is registered.\n        setup : function() {},    \n                                    \n        // OPTIONAL, defaults to false\n        // If set to true, defers execution of the setup function \n        // until the first time the media query is matched\n        deferSetup : true,\n                                    \n        // OPTIONAL\n        // If supplied, triggered when handler is unregistered. \n        // Place cleanup code here\n        destroy : function() {}         \n      });\n\n      enquire.register('screen and (min-width:481px) and (max-width:1023px)', {\n        // OPTIONAL\n        // If supplied, triggered when a media query matches.\n        match : function() {       \n          body.addClass(tabletDevice);\n          $mobileHiddenNav.removeAttr('style');\n        }, \n\n        // OPTIONAL\n        // If supplied, triggered when the media query transitions \n        // *from a matched state to an unmatched state*.\n        unmatch : function() {\n          body.removeClass(tabletDevice);\n        },\n\n        // OPTIONAL\n        // If supplied, triggered once, when the handler is registered.\n        setup : function() {},    \n                                    \n        // OPTIONAL, defaults to false\n        // If set to true, defers execution of the setup function \n        // until the first time the media query is matched\n        deferSetup : true,\n                                    \n        // OPTIONAL\n        // If supplied, triggered when handler is unregistered. \n        // Place cleanup code here\n        destroy : function() {}\n      });\n\n      enquire.register('screen and (min-width:1024px)', {\n        // OPTIONAL\n        // If supplied, triggered when a media query matches.\n        match : function() {\n          body.addClass(desktopDevice);\n          $mobileHiddenNav.removeAttr('style');\n        }, \n\n        // OPTIONAL\n        // If supplied, triggered when the media query transitions \n        // *from a matched state to an unmatched state*.\n        unmatch : function() {  \n          body.removeClass(desktopDevice);\n        },\n\n        // OPTIONAL\n        // If supplied, triggered once, when the handler is registered.\n        setup : function() {},    \n                                    \n        // OPTIONAL, defaults to false\n        // If set to true, defers execution of the setup function \n        // until the first time the media query is matched\n        deferSetup : true,\n                                    \n        // OPTIONAL\n        // If supplied, triggered when handler is unregistered. \n        // Place cleanup code here\n        destroy : function() {}\n      });\n\n      // MOBILE NAV TOGGLE MENU\n      $mobileMenuToggle.on('click', handleMobileNavToggle);\n\n      // MOBILE NAV LINK CLOSE MENU\n      $mobileMenulinkClose.on('click', handleMobileNavClose);\n\n      //SCROLL TO PORTFOLIO ANCHOR\n      $portfolioAnchor.on('click', handlePortfolioAnchor);\n\n      // WINDOW SCROLL DETECTION\n      $(window).on('scroll', handleScrollDetection);\n\n  }\n));","(function() {\n\n\t'use strict';\n\n\tangular\n\t\t.module('folioFramework', ['ngSanitize']);\n\n})();","(function() {\n\n\t'use strict';\n\n\tfunction FolioController(dataService, $http) {\n\t\t// VM = Virtual model\n\t\tvar vm = this,\n\t\t\t\t$body = $('body'),\n\t\t\t\tdesktopDevice = 'desktop-viewport',\n\t\t\t\t$fullPageOptionsTouchDevice = {\n          anchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n          controlArrows: true,\n          autoScrolling: false,\n          fitToSection: false,\n          fixedElements: '.navbar, .work-details',\n          menu: '#menu',\n          responsiveHeight: '768',\n          slidesNavigation: false,\n          slidesNavPosition: 'bottom',\n          afterResize: function(){\n            //console.log('after resize');\n            $.fn.fullpage.destroy('all');\n            calculateNumberofSlides();\n            initializeFullpage();\n          }\n        },\n        $fullPageOptionsDesktop = {\n          anchors: ['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage'],\n          controlArrows: true,\n          autoScrolling: false,\n          scrollBar: true,\n          fitToSection: false,\n          fixedElements: '.navbar, .work-details',\n          menu: '#menu',\n          navigation: true,\n          navigationPosition: 'left',\n          responsiveHeight: '768',\n          slidesNavigation: false,\n          slidesNavPosition: 'bottom',\n          afterResize: function(){\n            //console.log('after resize');\n            $.fn.fullpage.destroy('all');\n            calculateNumberofSlides();\n            initializeFullpage();\n          }\n        },\n        $fullPage = $('#fullpage'),\n        maxNumberOfItems,\n\t\t\t\tmobileDevice = 'mobile-viewport',\n        randomNumber = Math.floor(Math.random()*8999+1000),\n        //resizeId,\n        tabletDevice = 'tablet-viewport',\n        panelActive = false,\n        workItemID = 0,\n        workItemIndex = 0;\n\n    //Setup full page\n    function initializeFullpage() {\n\n      // This will only run after the ng-repeat has rendered its things to the DOM\n      setTimeout(function() {\n        //console.log('initialise plugin');\n\n        if($body.hasClass(desktopDevice)){\n          //console.log('DESKTOP');\n          $fullPage.fullpage($fullPageOptionsDesktop);\n        } else {\n          //console.log('TOUCH DEVICE');\n          $fullPage.fullpage($fullPageOptionsTouchDevice);\n        }\n        \n      }, 500); // wait...\n\n    }\n\n    //Window resizing finished\n    /*function doneWindowResize(){\n      console.log('window resize finished');\n      calculateNumberofSlides();\n      initializeFullpage();\n    }*/\n\n    //Work Section - Wrap every 'X' number of work items to force slider\n    function numberOfSlides() {\n      \n      //console.log('numberOfSlides() - setup new HTML');\n\n      var workItemSlider = $('.section.work .container .items'),\n          workItemSlides = $('.section.work .container .slide');\n\n          //console.log('number of work items ' + workItemSlider.length);\n\n      function buildSlideHTML() {\n        //console.log('building the html');\n\n        for(var i = 0; i < workItemSlider.length; i+=maxNumberOfItems) {\n          //console.log('loop the items and wrap with new HTML');\n          workItemSlider.slice(i, i+maxNumberOfItems).wrapAll('<div class=\"slide\"></div>');\n        }\n\n        //console.log(workItemSlider.length);\n        //console.log('number of work slides ' + workItemSlides.length);\n\n      }\n\n      function destroySlideHTML() {\n        //console.log('destroy existing HTML');\n\n        /*$(workItemSlides).replaceWith(function() {\n         return $(workItemSlider, this);\n        });*/\n\n        workItemSlides.replaceWith(function() {\n         return workItemSlider;\n        });\n\n        buildSlideHTML();\n      }\n\n      // If the work items are wrapped in the 'slide' HTML then destroy, otherwise rebuild\n      if(workItemSlides.length) {\n        //console.log('destroy');\n        destroySlideHTML();\n      } else {\n        //console.log('build');\n        buildSlideHTML();\n      }\n\n    }\n\n    // Calculate number of slides required for the work section\n    function calculateNumberofSlides() {\n\n      // This will only run after the ng-repeat has rendered its things to the DOM\n      setTimeout(function() {\n        //console.log('calculate number of slides');\n\n        if ($body.hasClass(mobileDevice)) {\n          maxNumberOfItems = 6;\n          //console.log('mobile device - set max number of items to ' + maxNumberOfItems);\n        } else if ($body.hasClass(tabletDevice)) {\n          maxNumberOfItems = 9;\n          //console.log('tablet device - set max number of items to ' + maxNumberOfItems);\n        } else if ($body.hasClass(desktopDevice)) {\n          maxNumberOfItems = 12;\n          //console.log('desktop device - set max number of items to ' + maxNumberOfItems);\n        }\n\n        numberOfSlides();\n\n        return;\n        \n      }, 500); // wait...\n\n    }\n\n    //Get work item details\n    function getWorkItemDetails(workItem) {\n\n      if (panelActive === true) {\n\n        if (workItem !== undefined) {\n          //console.log(workItem.itemId);\n          return workItem.itemId == workItemID;\n        }\n\n      }\n\n    }\n\n    //Set the ID of the clicked work item\n    function setWorkItemDetailsId(work) {\n\n      workItemID = work.itemId;\n\n      //console.log('work item id is: ' + work.itemId);\n\n      //document.getElementById('jsonWorkID').value = workItemID;\n\n      getWorkItemDetails();\n\n    }\n\n    //Open work item details panel\n    function openWorkItemDetailsPanel($event) {\n      \n      $event.preventDefault();\n\n      panelActive = true;\n\n      //console.log(panelActive);\n\n    }\n\n    //Close work item details panel\n    function closeWorkItemDetailsPanel($event) {\n      \n      $event.preventDefault();\n\n      panelActive = false;\n\n    }\n\n    //Show specific details of thumbnail\n    function updateThumbDetails(index) {\n\n      workItemIndex = index;\n\n    }\n\n    //If a current image is the same as the requested image\n    function isActive(index) {\n\n      return workItemIndex === index;\n\n    }\n\n    //Randomise an array when called\n    function randomizeArray() {\n      \n      return 0.5 - Math.random();\n\n    }\n\n    //Random number for the anti-spam contact form\n    function getRandomNumber() {\n      \n      //console.log(randomNumber);\n\n      return randomNumber;\n\n    }\n\n    // calling our contact submit function.\n    function contactFormSubmit() {\n\n      //console.log(vm.user);\n\n      //console.log(randomNumber);\n\n      var urlBase = 'HTMLResources/php/contact.php';\n\n      vm.errorHeaderMessage = '';\n      vm.successHeaderMessage = '';\n\n      // Posting data to php file\n      $http({\n        method  : 'POST',\n        url     : urlBase,\n        data    : vm.user, //forms user object\n        headers : {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        cache: false\n       })\n        .success(function(data) {\n          //console.log(data);\n          if (data.errors) {\n            //console.log(vm.user);\n            vm.validationError = true;\n            vm.validationSuccess = false;\n            vm.errorHeaderMessage = data.errorHeaderMessage;\n            vm.errorName = data.errors.name;\n            vm.errorEmail = data.errors.email;\n            vm.errorMessage = data.errors.message;\n            vm.errorNumber = data.errors.human;\n          } else {\n            vm.validationError = false;\n            vm.validationSuccess = true;\n            vm.successHeaderMessage = data.successHeaderMessage;\n            vm.errorName = '';\n            vm.errorEmail = '';\n            vm.errorMessage = '';\n            vm.errorNumber = '';\n            vm.user = {};\n          }\n\n        });\n\n    }\n\n    //Initialise full page\n    vm.initializeFullpage = initializeFullpage;\n\n\t\t//Get access to dataService object in our view\n\t\tvm.dataService = dataService;\n\n\t\t//Work Section - Wrap every 'X' number of work items to force slider\n\t\tvm.calculateNumberofSlides = calculateNumberofSlides;\n\n    //Set the ID of the clicked work item\n    vm.setWorkItemDetailsId = setWorkItemDetailsId;\n\n    //Click function for retrieving the work item details\n    vm.getWorkItemDetails = getWorkItemDetails;\n\n    //Click function for openning the work item details panel\n    vm.openWorkItemDetailsPanel = openWorkItemDetailsPanel;\n\n    //Click function for closing the work item details panel\n    vm.closeWorkItemDetailsPanel = closeWorkItemDetailsPanel;\n\n    //Show details of selected work item thumbnail\n    vm.updateThumbDetails = updateThumbDetails;\n\n    //Set image as the active image\n    vm.isActive = isActive;\n\n    //Randomise an array\n    vm.randomizeArray = randomizeArray;\n\n    //Generate a random number for the contact page\n    vm.getRandomNumber = getRandomNumber;\n\n    //Click function for retrieving contact from submission\n    vm.contactFormSubmit = contactFormSubmit;\n\n    // create a blank object to handle form data.\n    vm.user = {\n      name: '',\n      email: '',\n      message: '',\n      randomnumber: randomNumber,\n      human: null\n    };\n\n    //Window resized\n    /*$(window).resize(function() {\n        clearTimeout(resizeId);\n        resizeId = setTimeout(doneWindowResize, 500);\n    });*/\n\n\t}\n\n\t//Call the function after ng-repeat in work section has finished\n\t/*function Loaded() {\n  \treturn {\n      scope: { callbackFn: '&' },\n      link: function(scope) {\n\n        //console.log('xxx loaded ng repeat in work section xxx');\n        scope.callbackFn();\n      },\n    };\n  }*/\n\n  //Call the function after the site has rendered\n  function Initialise() {\n  \treturn {\n      restrict: 'A',\n      scope: { callbackrenderFn: '&' },\n      link: function(scope){\n\n        setTimeout(function() {\n          //console.log('xxx site has rendered initialise the fullpage plugin xxx');\n          scope.callbackrenderFn();\n        }, 100); // wait...\n\n      } \n  \t};\n  }\n\n\tangular\n\t\t.module('folioFramework')\n\t\t.controller('folioCtrl', FolioController)\n\t\t//.directive('loadedDirective', Loaded)\n\t\t.directive('initializeDirective', Initialise);\n\n\tFolioController.$inject = ['dataService', '$http'];\n\n})();","(function() {\n\n\t'use strict';\n\n\tfunction DataFactory($http) {\n\n\t\t/*var urlBase = 'http://www.json-generator.com/api/json/get/bQkWdPSKMi?indent=2';*/\n\t\tvar urlBase = 'HTMLResources/json/folio-data.json?callback=JSON_CALLBACK';\n\n\t\tvar JSONHomeSection = [];\n\t\tvar JSONAboutSection = [];\n\t\tvar JSONTestimonialSection = [];\n\t\tvar JSONWorkSection = [];\n\t\tvar JSONContactSection = [];\n\n\t\tvar dataObj = {\n\t\t\tJSONHomeSection: JSONHomeSection,\n\t\t\tJSONAboutSection: JSONAboutSection,\n\t\t\tJSONTestimonialSection: JSONTestimonialSection,\n\t\t\tJSONWorkSection: JSONWorkSection,\n\t\t\tJSONContactSection: JSONContactSection\n\t\t};\n\n    $http.get(urlBase).success(function(data) {\n        dataObj.JSONHomeSection = data.JSONHomeSection,\n        dataObj.JSONAboutSection = data.JSONAboutSection,\n        dataObj.JSONTestimonialSection = data.JSONTestimonialSection,\n        dataObj.JSONWorkSection = data.JSONWorkSection,\n        dataObj.JSONContactSection = data.JSONContactSection;\n    });\n\n  \treturn dataObj;\n\n\t}\n\n\tangular\n\t\t.module('folioFramework')\n\t\t.factory('dataService', DataFactory);\n\n\tDataFactory.$inject = ['$http'];\n\t\t\n})();"],"sourceRoot":"/source/"}